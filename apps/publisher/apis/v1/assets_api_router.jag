<%

var config = require('/config/publisher.json');
var caramel = require('caramel');

var router = require('/modules/router-g.js').router();
var routeManager = new router.Router();
var user = require('/modules/user.js');
var publisher = require('/modules/publisher.js').publisher(request, session);
var stats = require('/modules/statistics.js');

//var routeManager=application.get(config.app.ROUTE_MANAGER);
var rxtManager = publisher.rxtManager;
var modelManager = publisher.modelManager;
var log = new Log();


routeManager.register('POST', 'publisher', '/publisher/api/assets/{operation}/{type}/', function (context) {
    var type = context.params.type;

    var username = require('/modules/user.js').current(session).username;
    var startDate = context.post.startDate;
    var endDate = context.post.endDate;

    var output = {};

    var dbResults = stats.getStats(username, startDate, endDate);

    var bookmarkStats = stats.filterResultsByAssetType(dbResults.bookmarkStats, type);

    var artifactManager = rxtManager.getArtifactManager(type);
    var model = modelManager.getModel(type);

    if (!context.post.isOnChoice) {
        var bookmarkTicks = [], bookmarkStatData = [], assetName;
        for (var i = 0; i < bookmarkStats.length; i++) {
            var artifact = artifactManager.get(bookmarkStats[i].ASSET_ID);
            model.import('asset', artifact);
            assetName = (model.get('overview.name')).value;
            bookmarkStatData.push([i, parseInt(bookmarkStats[i]['NO_OF_BOOKMARKS'])]);
            bookmarkStats[i]['ASSET_ID'] = assetName;
            bookmarkTicks.push([i, assetName]);

        }

        output['bookmarkStats'] = bookmarkStatData;
        output['bookmarkTicks'] = bookmarkTicks;
    }

    var hotAssetsStats = stats.filterResultsByAssetType(dbResults.hotAssetsStats, type);
    var hotAssetticks = [], hotstAssetData = [], hotAssetName;
    for (var i = 0; i < hotAssetsStats.length; i++) {
        var artifact = artifactManager.get(hotAssetsStats[i].ASSET_ID);
        model.import('asset', artifact);
        hotAssetName = (model.get('overview.name')).value;
        hotstAssetData.push([i, parseInt(hotAssetsStats[i]['NO_OF_BOOKMARKS'])]);
        hotAssetsStats[i]['ASSET_ID'] = hotAssetName;
        hotAssetticks.push([i, hotAssetName]);

    }

    output['hotAssetStats'] = hotstAssetData;
    output['hotAssetTicks'] = hotAssetticks;

    print(output);
});

routeManager.handle(request, response);


%>
