<%
var caramel;
(function () {
    var assets, paging, current, total, sso, url, mainPage, subPage,title, selectedCategory, key,
            options = {},
			subscriptions ={},
	    	subscription = false,
            log = new Log(),
            mod = require('store'),
            user = mod.server.current(session),
            configs = require('/config/store.js').config(),
            tenant = mod.server.tenant(request, session),
            tenantId = tenant.tenantId,
            store = require('/modules/store.js').store(tenantId, session),
            site = require('/modules/site.js'),
            tag = request.getParameter('tag'),
            query = request.getParameter('query'),
            event = require('/modules/event.js');

    caramel = require('caramel');

    sso = configs.ssoConfiguration.enabled;
    url = '/assets/' + type + '/?' + (tag ? 'tag=' + tag + '&' : '') + (query ? 'query=' + query + '&' : '');

    paging = store.assetsPaging(request);

    mainPage = type;
    
    title = store.assetLinks(type).title;
    
    if(user){
	    subscriptions = store.subscriptions(type);
		if(subscriptions[type]){
			var count = Object.keys(subscriptions[type]).length;
		    if(count == 0){
				subscriptions[type]={};
			}else{
				subscription =true;
			}
		}
	}
     
    if (tag) {
        subPage = '/ Tag: "' + tag + '"';
        assets = store.tagged(type, tag, paging);
    } else if (query) {
        query = require('/modules/search.js').build(query);
        options = {
            type: type,
            attributes: query
        };
        for(key in query) {
            if(query.hasOwnProperty(key) && key === 'overview_category') {
                selectedCategory = query[key];
            }
        }
        subPage = '/ Search: "' + query + '"';
        assets = store.search(options, paging);
    } else {
        if(paging.sort=='popular'){
            var db = new Database('SOCIAL_CACHE');
            var result = db.query("SELECT ID FROM SOCIAL_CACHE WHERE TYPE='" + type.replace(/\W/g, '') + "' ORDER BY RATING DESC LIMIT " + paging.start + ",12");
            assets = [];
            var pos,aid,asset;
            for (var n = 0; n < result.length; n++) {
                var combinedAid = String(result[n].ID);
                pos = combinedAid.indexOf(':');
                aid =  combinedAid.substring(pos + 1);
                asset =  store.asset(type,aid);
                asset.indashboard = store.isuserasset(aid, type);
                assets.push(asset);
            }
        } else{
            assets = store.assets(type, paging);
        }
    }

    var rxtAttributes = require('/modules/util.js').getRXTAttributes(tenantId, type);

    caramel.render({
        title: 'Store | Assets',
        user: user,
        sso: sso,
        header : site.header(tenantId, {
            sso: sso,
            user: user
        }),
        navigation: site.navigation(tenantId),
        search: {
                   mainPage: mainPage,
                   subPage: subPage,
                   isTopAssets: false,
                   searchFields: rxtAttributes
               },
        type: type,
        selectedCategory: selectedCategory,
        tags: function () {
            return [
                {
                    url: '/assets/' + type + '/?tag=',
                    data: store.tags(type)
                }
            ];
        },
        assets: assets,
        paging: {
            url: url + 'sort=' + paging.sort + '&page=',
            sort: paging.sort,
            tag: tag,
            size: assets.length
        },
        sorting: {
            url: url + 'sort='
        },
        myAssets : { user:user, type: type, title: title, subscriptions: subscriptions[type], subscription : subscription},
        recentAssets: function () {
            return store.recentAssets(type);
        }
    });
}());
%>
