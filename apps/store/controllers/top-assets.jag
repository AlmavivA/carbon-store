<%
//TODO : remove this and fix welcome page properly
//response.sendRedirect('.' + require('/store.js').config().assetsUrlPrefix + '/gadget');

var caramel;
( function () {
    var gadgets, sites, ebooks, paging, count, current, loggedUser, manager, assets,
            length, recentDiff, popularDiff, recent, popular, sso, type,
            first = true,
            recentCount = 10,
            popularCount = 10,
            items = [],
            popularItems = [],
            recentItems = [],
            options = {},
            log = new Log(),
            mod = require('store'),
            user = mod.user,
            configs = require('/config/store.js').config(),
            site = require('/modules/site.js'),
            tag = request.getParameter('tag'),
            query = request.getParameter('query'),
            server = mod.server,
            ssoUser = server.current(session),
            tenant = server.tenant(request, session),
            tenantId = tenant.tenantId,
            store = require('/modules/store.js').store(tenantId, session),
            types = store.assetTypes();
    length = types.length;
    recent = Math.floor(recentCount / length);
    recentDiff = recentCount - recent * length;
    popular = Math.floor(popularCount / length);
    popularDiff = popularCount - popular * length;
    paging = store.assetsPaging(request);
    query = query ? require('/modules/search.js').build(String(query)) : null;
    types.forEach(function (type) {
        manager = store.rxtManager(type, session);
        if (query) {
            assets = store.search({
                attributes: query,
                tag: tag,
                type: type
            }, paging);
        } else if (tag) {
            assets = store.tagged(type, tag, paging);
        } else {
            assets = store.assets(type, paging);
        }
        items.push({
            assets: assets,
            plural: manager.pluralLabel,
            singular: manager.singularLabel,
            type: manager.shortName
        });
        popularItems = popularItems.concat(store.popularAssets(type, first ? (popular + popularDiff) : popular));
        recentItems = recentItems.concat(store.recentAssets(type, first ? (recent + recentDiff) : recent));
        first = false;
    });
    caramel = require('caramel');
    sso = configs.ssoConfiguration.enabled;
    loggedUser = (sso && ssoUser) ? {
        username: ssoUser.username
    } : server.current(session);

    caramel.render({
        title: 'Store | WSO2 Enterprise Store',
        user: loggedUser,
        sso: sso,
        header: site.header(tenantId, {
            sso: sso,
            user: loggedUser
        }),
        navigation: site.navigation(tenantId),
        search: {
            title: "Top Assets",
            isTopAssets: true,
            searchFields: [
                {
                    "field_name": "provider",
                    "field_label": "Provider",
                    "search": false
                },
                {
                    "field_name": "name",
                    "field_label": "Name",
                    "search": false
                },
                {
                    "field_name": "version",
                    "field_label": "Version",
                    "search": false
                },
                {
                    "field_name": "category",
                    "field_label": "Category",
                    "search": false
                },
                {
                    "field_name": "description",
                    "field_label": "Description",
                    "search": false
                }
            ]
        },
        topAssets: {
            assets: items,
            popularAssets: popularItems
        },
        tags: {
            url: '/assets/' + type + '?page=1&tag=',
            data: store.tags(type)
        },
        recentAssets: recentItems

        // type: type,  tag: tag,

    });

}());

%>
